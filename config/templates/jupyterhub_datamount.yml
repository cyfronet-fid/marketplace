tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

description: >
  Deploy a Kubernetes Virtual Cluster with JupyterHub and DataMountSpawner extension.
  It also downloads a list of datasets in a PVC to be mounted in JupyterHub.

metadata:
  template_name: DataMount JupyterHub on Kubernetes
  template_version: "1.0.0"

topology_template:
  inputs:
    # Kubernetes Cluster parameters
    fe_cpus:
      type: integer
      description: Number of CPUs for the front-end node
      default: 4
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 8 GiB
    fe_disk_size:
      type: scalar-unit.size
      description: Size of the disk to be attached to the FE instance (Set 0 if disk is not needed)
      default: 100 GiB

    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
    wn_cpus:
      type: integer
      description: Number of CPUs for the WNs
      default: 4
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 8 GiB
    wn_disk_size:
      type: scalar-unit.size
      description: Size of the root disk of the WNs (in case of 0 disk will no be resized)
      default: 50 GiB

    kube_public_dns_name:
      type: string
      description: DNS name of the public interface of the JupyterHub
      default: "jupytermount.vm.fedcloud.eu"

    # JupyterHub parameters
    admin_password:
      required: true
      type: string
      description: Password of the JupyterHub Administrator user
      default: not_very_secret_pass

    # Dataset list parameters
    dataset_ids:
      required: true
      type: list
      entry_schema:
        type: string
      description: List of URLs or DOIs of the data to Download.
      default:
        - 10.48372/84a70617-3606-499d-bbe6-2b52ccf33392
        - 10.48372/29290d64-a840-4ffc-accf-5bf68deef233
        - 10.48372/285eff33-55de-4d0e-8b7f-c995dc80478e
        - 10.48372/98914415-765c-4650-b272-b16793231e8a
        - 10.48372/30d8844e-1774-4c63-89c4-4d858f88317d

  node_templates:

    my_dataset_list:
      type: tosca.nodes.eosc.DatasetList
      properties:
        dataset_ids: { get_input: dataset_ids }
        dest: '/data'
        owner: ''
        pvc_name: 'claim-data'
        pvc_namespace: 'jupyter'
      requirements:
        - host: front
        - dependency: jupyterhub

    jupyterhub:
      type: tosca.nodes.ec3.Application
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/jupyter/jupyterhub_k8s.yml
            inputs:
              authenticator_class: dummy
              dummy_pass: { get_input: [ admin_password ] }
              admin_user: admin
              install_data_mount: yes
              kube_public_dns_name: { get_input: [ kube_public_dns_name ] }
      requirements:
        - host: front
        - dependency: lrms_front_end

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      capabilities:
        endpoint:
          properties:
            ports:
              http_port:
                protocol: tcp
                source: 80
              https_port:
                protocol: tcp
                source: 443
      properties:
        admin_username: kubeuser
        install_nfs_client: true
        admin_token: ''
        install_kubeapps: false
        version: "1.32.4"
        cert_manager: true
        cert_user_email: jhondoe@server.com
        public_dns_name: { get_input: kube_public_dns_name}
        cri_runtime: docker
        csi_driver: NFS
      requirements:
        - host: front

    front:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            additional_dns_names:
              - { get_input: kube_public_dns_name}
            network_name: PUBLIC
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 24.04
      requirements:
        - local_storage:
            node: fe_block_storage
            relationship:
              type: AttachesTo
              properties:
                location: /pv

    fe_block_storage:
      type: tosca.nodes.BlockStorage
      properties:
        size: { get_input: fe_disk_size }

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ front, private_address, 0 ] }
        version: "1.32.4"
        cri_runtime: docker
        csi_driver: NFS
      requirements:
        - host: wn

    wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            disk_size: { get_input: wn_disk_size }
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            distribution: ubuntu
            type: linux
            version: 24.04

  outputs:
    jupyterhub_url:
      value: { concat: [ 'https://', get_input: kube_public_dns_name, '/jupyterhub/' ] }
