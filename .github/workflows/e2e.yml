name: Integration Test
on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
        
    steps:
    - name: Configure sysctl limits
      run: |
        sudo swapoff -a
        sudo sysctl -w vm.swappiness=1
        sudo sysctl -w fs.file-max=262144
        sudo sysctl -w vm.max_map_count=262144
    - uses: actions/checkout@v2
    - name: Start containers
      run: docker-compose -f docker-compose.yml -f docker-compose-e2e.yml up -d
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true # runs 'bundle install' and caches installed gems automatically
    - uses: actions/setup-node@v2
      with:
        node-version: '16.13.0'
        check-latest: true
        cache: yarn
    - run: yarn
    - name: Install foreman
      run: |
        gem install foreman
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/Cypress
          ./test/system/node_modules
        key: my-cache-${{ runner.os }}-${{ hashFiles('./test/system/package-lock.json') }}
    - name: Install e2e dependencies
      run: npm i --prefix ./test/system
    - name: Setup and seed db
      env:
        RAILS_ENV: development
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        bundle exec rake db:drop db:setup searchkick:reindex:all
        bundle exec rails dev:prime_e2e
    - name: Run App
      env:
        PORT: 5000
        RAILS_ENV: development
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        AUTH_MOCK: true
        # MP_JIRA_USERNAME: ${{ secrets.JIRA_TEST_USER }}
        # MP_JIRA_PASSWORD: ${{ secrets.JIRA_TEST_USER_PWD }}
        # MP_JIRA_URL: ${{ secrets.MP_JIRA_URL }}
        # MP_JIRA_PROJECT: ${{ secrets.MP_JIRA_PROJECT }}
      run: |
        ./bin/server &
    - name: Run cypress
      uses: cypress-io/github-action@v2
      env:
        CYPRESS_JIRA_TEST_USER: ${{ secrets.JIRA_TEST_USER }}
        CYPRESS_JIRA_TEST_USER_PWD: ${{ secrets.JIRA_TEST_USER_PWD }}
        CYPRESS_MP_JIRA_URL: ${{ secrets.MP_JIRA_URL }}
        CYPRESS_MP_JIRA_PROJECT: ${{ secrets.MP_JIRA_PROJECT }}
      with:
        project: ./test/system
        command: npm run cy:run --prefix ./test/system
        wait-on: 'http://localhost:5000'
        browser: chrome
        headless: true
        quiet: true
        record: false
        install: false
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: cypress-screenshots
        path: ./test/system/cypress/screenshots
    - name: Containers logs
      if: failure()
      run: docker-compose logs
    - name: Stop containers
      if: always()
      run: docker-compose down
