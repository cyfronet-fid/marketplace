language: ruby

rvm:
  - 2.6.5

cache:
  bundler: true
  directories:
    - node_modules
  yarn: true

addons:
  chrome: stable
  postgresql: "9.4"

services:
  - postgresql
  - redis-server
  - xvfb

before_script:
  # Due to google chrome bug, this is required for capybara e2e testing
  # (http://quyetbui.info/chrome-headless-capybara-on-travis-ci/)
  - export DISPLAY=:99.0
  # https://docs.travis-ci.com/user/database-setup/#ElasticSearch
  - sleep 10
  - psql -c 'create database travis_ci_test;' -U postgres
  - cp config/database.yml.travis config/database.yml

before_install:
  - curl -s -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.5.0-amd64.deb
  - sudo dpkg -i --force-confnew elasticsearch-7.5.0-amd64.deb
  - sudo sed -i.old 's/-Xms1g/-Xms128m/' /etc/elasticsearch/jvm.options
  - sudo sed -i.old 's/-Xmx1g/-Xmx128m/' /etc/elasticsearch/jvm.options
  - echo -e '-XX:+DisableExplicitGC\n-Djdk.io.permissionsUseCanonicalPath=true\n-Dlog4j.skipJansi=true\n-server\n' | sudo tee -a /etc/elasticsearch/jvm.options
  - sudo chown -R elasticsearch:elasticsearch /etc/default/elasticsearch
  - sudo systemctl start elasticsearch

install:
  - gem install bundler --version '2.0.1'
  - bundle install
  - nvm install v10.15.0
  - node -v
  - npm i -g yarn
  - yarn

stages:
  - name: test
  - name: development deploy
    if: branch = master AND type = push
  - name: production deploy
    if: branch = production AND type = push

jobs:
  include:
    - stage: test
      script:
        - bin/rails db:migrate RAILS_ENV=test
        - bundle exec rspec
        - yarn test
    - stage: test
      script:
        - bundle exec overcommit --install
        - bundle exec overcommit --sign
        # this will not run rubocop, because there are no modified files
        - bundle exec overcommit -r
        - bundle exec rubocop
    - stage: test
      script:
        - gem install brakeman
        - brakeman --exit-on-warn --quiet -f plain

    - stage: development deploy
      install: skip
      script:
        - echo "development deploy script"
        -
    - stage: production deploy
      install: skip
      script:
        - echo "production deploy script"
