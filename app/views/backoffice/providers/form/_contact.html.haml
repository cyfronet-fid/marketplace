.card.shadow-sm.rounded
  %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(provider,
            [:"main_contact.first_name", :"main_contact.last_name",
            :"main_contact.email", :"public_contacts.email",
            :"main_contact.phone", :"public_contacts.phone",
            :public_contacts])),
              data: { toggle: "collapse", target: "#contact" },
              aria: { expanded: true, controls: "contact" } }
    .card-header.text-left{ id: "contact-header" }
      .row
        .col-10
          = _("Contact")
        .col-2.text-right
          .collapse-icon
            %i.fas.fa-chevron-down
            %i.fas.fa-chevron-up
.collapse{ id: "contact", "aria-labelledby": "contact-header",
        "data-parent": "#accordion-form",
        class: ("show" unless collapsed?(provider, [:"main_contact.first_name",
        :"main_contact.last_name", :"main_contact.email", :"public_contacts.email",
        :"main_contact.phone", :"public_contacts.phone", :public_contacts])) }
  .card-body
    .row.service-contact-emails
      .col-12
        %h3
          = _("Main Contact")
        .contact
          = f.fields_for :main_contact do |main_contact_form|
            = main_contact_form.hidden_field :id, disabled: provider.upstream_id.present?
            = main_contact_form.input :first_name, disabled: provider.upstream_id.present?
            = main_contact_form.input :last_name, disabled: provider.upstream_id.present?
            = main_contact_form.input :email, disabled: provider.upstream_id.present?
            = main_contact_form.input :phone, disabled: provider.upstream_id.present?
            = main_contact_form.input :position, disabled: provider.upstream_id.present?
    .row.service-contact-emails{ "data-service-target": "publicContacts" }
      .col-12
        %h3
          = _("Public contacts")
        = f.error :public_contacts, class: "invalid-feedback d-block"
        = f.fields_for :public_contacts, disabled: provider.upstream_id.present?, multiple: true, as: :array,
                wrapper_html: { "data-form-target" => "publicContact" } do |public_contact_form|
          = render_public_contact(public_contact_form, provider)
        = link_to _("Add additional public contact"), "#", class: "btn btn-primary disablable",
          data: { form: { target: "addField" },
          action: "click->form#addField",
          value: "publicContacts",
          fields: f.fields_for(:public_contacts, PublicContact.new,
          child_index: "new_field") { |pcf| render_public_contact(pcf, provider) } }
