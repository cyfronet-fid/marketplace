.card.shadow-sm.rounded
  %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(provider,
              [:hosting_legal_entity, :participating_countries, :affiliations, :networks, :structure_types,
              :esfri_types, :esfri_domains, :meril_scientific_domains, :areas_of_activity,
              :societal_grand_challenges, :national_roadmaps])),
                data: { toggle: "collapse", target: "#other" },
                aria: { expanded: true, controls: "other" } }
    .card-header.text-left{ id: "other-header" }
      .row
        .col-10
          = _("Other")
        .col-2.text-right
          .collapse-icon
            %i.fas.fa-chevron-down
            %i.fas.fa-chevron-up
.collapse{ id: "other", "aria-labelledby": "other-header",
          "data-parent": "#accordion-form",
          class: ("show" unless collapsed?(provider,
              [:hosting_legal_entity, :participating_countries, :affiliations, :networks, :structure_types,
              :esfri_types, :esfri_domains, :meril_scientific_domains, :areas_of_activity,
              :societal_grand_challenges, :national_roadmaps])) }
  .card-body
    .row
      .col-12
        = f.input :hosting_legal_entity, disabled: cant_edit(:hosting_legal_entity, provider)
    .row
      .col-12
        = f.input :participating_countries, disabled: cant_edit([participating_countries: []], provider), as: :select,
                  collection: Country.options.map { |c| [ c.name, "value" => c.alpha2 ] },
                  input_html: { data: { choice: true },  multiple: true }
    .row
      .col-12
        = f.input :affiliations, multiple: true, input_html: { class: "form-control text optional" },
              wrapper_html: { "data-target" => "form.affiliations" },
              disabled: cant_edit([affiliations: []], provider), as: :array
        = link_to_add_array_field("provider", "affiliations")
        .mt-4
        = f.association :networks, disabled: cant_edit([network_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } }
        = f.association :structure_types, disabled: cant_edit([structure_type_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } }
        = f.association :esfri_domains, disabled: cant_edit([esfri_domain_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } }
        = f.input :esfri_type, disabled: cant_edit([esfri_type_ids: []], provider),
              collection: Vocabulary.where(type: "Vocabulary::EsfriType"),
              label_method: :name, value_method: :id,
              input_html: { multiple: false, data: { choice: true } }
        - msd_child_names = Vocabulary.where(type: "Vocabulary::MerilScientificDomain").child_names
        - msd_non_root_names = msd_child_names.filter_map { |name, sd| [name, sd.id] if sd.parent.present? }
        = f.association :meril_scientific_domains, disabled: cant_edit([meril_scientific_domain_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } },
              collection: msd_non_root_names,
              label_method: :first, value_method: :second
        = f.association :areas_of_activity, disabled: cant_edit([areas_of_activity_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } }
        = f.association :societal_grand_challenges, disabled: cant_edit([societal_grand_challenge_ids: []], provider),
              input_html: { multiple: true, data: { choice: true } }
        = f.input :national_roadmaps, disabled: cant_edit([national_roadmaps: []], provider), multiple: true,
              input_html: { class: "form-control text optional" },
              wrapper_html: { "data-target" => "form.national_roadmaps" }, as: :array
        = link_to_add_array_field("provider", "national_roadmaps")
    .row
      .col-12
        = f.input :upstream_id, collection: f.object.sources.reject { |source| source.id.nil? },
          include_blank: "MP", label: _("Provider Upstream")

        %h3.mt-4
          = _("External Sources")

        = f.fields_for :sources do |sources_form|
          = sources_form.hidden_field :id
          = sources_form.input :source_type, collection: ProviderSource.source_types.keys.map(&:to_sym)
          = sources_form.input :eid, label: _("EOSC Registry External ID")
          - unless sources_form.object.id.nil?
            = sources_form.check_box :_destroy
            = sources_form.label :_destroy, _("Remove external source")
    .row
      .col-12.col-md-4.mt-4
        = f.input :synchronized_at, as: :date_time_picker, disabled: true
