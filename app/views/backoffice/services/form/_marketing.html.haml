.card.rounded
  %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:description, :tagline, :logo, :link_multimedia_urls, :link_use_cases_urls,
               :"link_multimedia_urls.url", :"link_use_cases_urls.url"])),
              data: { toggle: "collapse", target: "#marketing" },
              aria: { expanded: true, controls: "marketing" } }
    .card-header.text-left{ id: "marketing-header" }
      .row
        .col-10
          = _("Marketing")
        .col-2.text-right
          .collapse-icon
            %i.fas.fa-chevron-down
            %i.fas.fa-chevron-up
  .collapse{ id: "marketing", "aria-labelledby": "marketing-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:description, :tagline, :logo, :link_multimedia_urls,
             :link_use_cases_urls, :"link_multimedia_urls.url", :"link_use_cases_urls.url"])) }
    .card-body
      .service-description
        = f.input :description, disabled: cant_edit(:description)
      = f.input :tagline, disabled: cant_edit(:tagline)
      = f.input :logo, disabled: cant_edit(:logo)
      %h3
        = _("Multimedia urls")
      = f.fields_for :link_multimedia_urls, disabled: service.upstream_id.present?, multiple: true, as: :array,
                  wrapper_html: { "data-form-target" => "link" } do |link_form|
        = render_link(link_form, service, "multimedia")
      = link_to _("Add new multimedia"), "#", class: "btn btn-primary disablable",
                data: { "form-target": "addField",
                action: "click->form#addField",
                value: "multimedia",
                fields: f.fields_for(:link_multimedia_urls, Link::MultimediaUrl.new,
                child_index: "new_field") { |lf| render_link(lf, service, "multimedia") } }
      .mt-4
        %h3
          = _("Use cases urls")
        = f.fields_for :link_use_cases_urls, disabled: service.upstream_id.present?, multiple: true, as: :array,
                  wrapper_html: { "data-form-target" => "link" } do |link_form|
          = render_link(link_form, service, "useCase")
        = link_to _("Add new use case"), "#", class: "btn btn-primary disablable",
                  data: { "form-target": "addField",
                  action: "click->form#addField",
                  value: "useCases",
                  fields: f.fields_for(:link_use_cases_urls, Link::UseCasesUrl.new,
                  child_index: "new_field") { |lf| render_link(lf, service, "useCase") } }
