-# FIGMA: (remove /n when you want to get proper link)
  https://www.figma.com/file/0F53l8h6P2Q7TpzLuFZ7qX/
  Offers%3A-Adding-and-Editing?type=design&node-id=2-73&mode=design&t=F215vnzstlg4yUqR-0

= simple_form_for offer_form_source_module, html: { data: {controller: "offer", "offer-target": "form",
  "service-id": service.id, "offer-id": offer&.id || "new" }} do |f|
  = f.hidden_field :from, value: local_assigns[:from]

  .steps-row
    -# haml-lint:disable InlineClasses
    #offer-type-button.offer-step.active-button{ data: { action: "click->offer#showSection",
      section: "offer-type", "offer-target": "sectionButton" } }
      Offer Type
    -# haml-lint:enable InlineClasses
    #order-parameters-button.offer-step{ data: { action: "click->offer#showSection",
      section: "order-parameters", "offer-target": "sectionButton" } }
      Order Parameters
    #offer-parameters-button.offer-step{ data: { action: "click->offer#showSection",
      section: "offer-parameters", "offer-target": "sectionButton" } }
      Offer Parameters
    #offer-description-button.offer-step{ data: { action: "click->offer#showSection",
      section: "description", "offer-target": "sectionButton" } }
      Offer Description
    #summary-button.offer-step{ data: { action: "click->offer#showSection",
      section: "summary", "offer-target": "sectionButton" } }
      Summary

  .new-offer-form{ "data-controller": "ordering" }

    = f.error_notification
    = f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present?
    = f.hidden_field :id

    %div{ data: { "offer-target": "section", section: "offer-type" } }
      = render "backoffice/services/offers/steps/offer_type", offer: offer, f: f
    .d-none{ data: { "offer-target": "section", section: "order-parameters" } }
      = render "backoffice/services/offers/steps/order_parameters", service: service, offer: offer, f: f
    .d-none{ data: { "offer-target": "section", section: "offer-parameters" } }
      = render "backoffice/services/offers/steps/offer_parameters", offer: offer, f: f
    .d-none{ data: { "offer-target": "section", section: "description" } }
      = render "backoffice/services/offers/steps/description", offer: offer, f: f
    .d-none{ data: { "offer-target": "section", section: "summary" } }
      -# Render summary section here, from the backend


  .row.new-offer-form-controls
    .col-4
      .btn.btn-back.d-none{ data: { action: "click->offer#prevSection", "offer-target": "prevButton" } }
        <- Back
    .col-4.text-right
      = link_to _("Exit"), backoffice_service_offers_path(service), class: "btn btn-back"
    .col-4.text-right
      .btn.btn-primary{ data: { action: "click->offer#nextSection", "offer-target": "nextButton" } }
        Next ->

      .submit.d-none{ "data-offer-target": "submitRow" }
        = f.button :submit, class: "btn btn-primary pl-5 pr-5 mobile-bottom-margin", "data-e2e": "create-offer-btn"
        - if offer.persisted?
          - if policy([:backoffice, offer]).delete?
            = link_to "Delete Offer", polymorphic_path(offer_form_source_module),
                data: { "turbo-confirm": _("This action cannot be undone. Confirm to delete the Offer."), "turbo-method": :delete },
                class: "btn btn-primary pl-4 pr-4 mobile-bottom-margin btn-danger ml-3"
          - if policy([:backoffice, offer]).draft?
            = link_to "Unpublish Offer", polymorphic_path(offer_form_source_module << :draft),
              class: "btn btn-primary pl-4 pr-4 mobile-bottom-margin btn-info ml-3",
              data: { "turbo-confirm": _("Confirm and unpublish the Offer. It will no longer be visible on the website."),
                      "turbo-method": :post }
          - if policy([:backoffice, offer]).publish?
            = link_to "Publish Offer", polymorphic_path(offer_form_source_module << :publish),
              class: "btn btn-primary pl-4 pr-4 mobile-bottom-margin ml-3",
              data: { "turbo-confirm": _("Confirm and publish the Offer. It will be accessible on the website."),
                      "turbo-method": :post }
