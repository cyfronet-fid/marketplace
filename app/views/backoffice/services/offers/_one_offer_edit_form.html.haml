= simple_form_for offer_form_source_module, html: { "data-controller": "offer" } do |f|
  .col-lg-8.pl-0{ "data-controller": offer.order_required? ? "ordering" : "" }
    = f.error_notification
    = f.hidden_field :id
    - if offer.order_required?
      = f.input :internal,
        wrapper_html: { "data-target": "ordering.internalWrapper" },
        input_html: { "data-target": "ordering.internal",
                      "data-action": "ordering#updateVisibility" }
      = f.input :primary_oms_id, collection: service.available_omses,
        value_method: :id,
        label_method: :name,
        include_blank: false,
        wrapper_html: { "data-target": "ordering.primaryOmsWrapper" },
        input_html: { "data-target": "ordering.primaryOms",
                      "data-action": "ordering#updateVisibility",
                      class: "form-control-lg col-lg-6" }
      %div{ "data-target": "ordering.omsParamsContainer" }
        = f.simple_fields_for Offer::OMSParams.new(offer.oms_params) do |field|
          - service.available_omses.each do |oms|
            - oms.custom_params&.each do |param, param_options|
              = field.input param,
                required: param_options["mandatory"],
                wrapper_html: { "data-oms-id": oms.id }

  %h4.mt-5.mb-0.text-uppercase
    = _("Offer parameters")
  .row.parameters-section
    .col-12
      .float-left.parameter-list
        = parameter_templates(f)
      .float-right.parameter-cards
        .offer-attributes{ "data-target": "offer.attributes" }
          - offer.parameters.each_with_index do |p, idx|
            = render "parameters/template", parameter: p, form: f, index: idx

  %hr.bottom-hr.mb-5
  .row
    .col-12
      = f.button :submit, class: "btn btn-primary pl-5 pr-5"
      = link_to _("cancel and back to previous page"), back_link,
      class: "btn btn-link text-uppercase"
