= simple_form_for [:backoffice, service],
  html: { "data-controller" => "form", "data-target": "form.form",
  "data-disabled": service.upstream_id.present? }  do |f|
  = f.error_notification
  .row
    .col-12.col-md-2
      .fixme{ "data-target": "form.fixme", "data-action": "scroll@window->form#onScroll" }
        %ul.add-new-menu
          %li
            %a{ href: "#basic", "data-toggle": "collapse" }= _("Basic")
          %li
            %a{ href: "#marketing", "data-toggle": "collapse" }= _("Marketing")
          %li
            %a{ href: "#classification", "data-toggle": "collapse" }= _("Classification")
          %li
            %a{ href: "#availability", "data-toggle": "collapse" }= _("Availability")
          %li
            %a{ href: "#location", "data-toggle": "collapse" }= _("Location")
          %li
            %a{ href: "#contact", "data-toggle": "collapse" }= _("Contact")
          %li
            %a{ href: "#maturity", "data-toggle": "collapse" }= _("Maturity")
          %li
            %a{ href: "#dependencies", "data-toggle": "collapse" }= _("Dependencies")
          %li
            %a{ href: "#attribution", "data-toggle": "collapse" }= _("Attribution")
          %li
            %a{ href: "#management", "data-toggle": "collapse" }= _("Management")
          %li
            %a{ href: "#order", "data-toggle": "collapse" }= _("Order")
          %li
            %a{ href: "#financial", "data-toggle": "collapse" }= _("Financial")
          %li
            %a{ href: "#other", "data-toggle": "collapse" }= _("Other")

    .col-12.col-md-10

      #accordion-form.accordion
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:name, :abbreviation, :resource_organisation, :providers, :webpage_url])),
              data: { toggle: "collapse", target: "#basic" },
              aria: { expanded: true, controls: "basic" } }
            .card-header.text-left{ id: "basic-header" }
              .row
                .col-10
                  = _("Basic")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "basic", "aria-labelledby": "basic-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:name, :abbreviation, :resource_organisation,
                                                       :providers, :webpage_url])) }
          .card-body
            = f.input :name, disabled: cant_edit(:name)
            = f.input :abbreviation, disabled: cant_edit(:abbreviation)
            = f.association :resource_organisation, disabled: cant_edit(:resource_organisation_id),
                              collection: Provider.active.sort_by { |e| e.name.strip.downcase }
            = f.association :providers, multiple: true, input_html: { data: { choice: true } },
                              disabled: cant_edit([provider_ids: []]),
                              collection: Provider.active.sort_by { |e| e.name.strip.downcase }
            = f.input :webpage_url, disabled: cant_edit(:webpage_url)
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:description, :tagline, :logo, :link_multimedia_urls, :link_use_cases_urls,
               :"link_multimedia_urls.url", :"link_use_cases_urls.url"])),
              data: { toggle: "collapse", target: "#marketing" },
              aria: { expanded: true, controls: "marketing" } }
            .card-header.text-left{ id: "marketing-header" }
              .row
                .col-10
                  = _("Marketing")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "marketing", "aria-labelledby": "marketing-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:description, :tagline, :logo, :link_multimedia_urls,
             :link_use_cases_urls, :"link_multimedia_urls.url", :"link_use_cases_urls.url"])) }
          .card-body
            .service-description
              = f.input :description, disabled: cant_edit(:description)
            = f.input :tagline, disabled: cant_edit(:tagline)
            = f.input :logo, disabled: cant_edit(:logo)
            %h3
              = _("Multimedia urls")
            = f.fields_for :link_multimedia_urls, disabled: service.upstream_id.present?, multiple: true, as: :array,
                  wrapper_html: { "data-target" => "form.link" } do |link_form|
              = render "backoffice/common_parts/form/link_fields",
                link_form: link_form, object: service, link_name: "multimedia"
            = link_to _("Add new multimedia"), "#", class: "btn btn-primary disablable",
                data: { target: "form.addField",
                action: "click->form#addField",
                value: "multimedia",
                fields: f.fields_for(:link_multimedia_urls, Link::MultimediaUrl.new,
                child_index: "new_field") { |lf| render "backoffice/common_parts/form/link_fields",
                link_form: lf, object: service, link_name: "multimedia" } }
            .mt-4
              %h3
                = _("Use cases urls")
              = f.fields_for :link_use_cases_urls, disabled: service.upstream_id.present?, multiple: true, as: :array,
                  wrapper_html: { "data-target" => "form.link" } do |link_form|
                = render "backoffice/common_parts/form/link_fields",
                  link_form: link_form, object: service, link_name: "useCase"
              = link_to _("Add new use case"), "#", class: "btn btn-primary disablable",
                  data: { target: "form.addField",
                  action: "click->form#addField",
                  value: "useCases",
                  fields: f.fields_for(:link_use_cases_urls, Link::UseCasesUrl.new,
                  child_index: "new_field") { |lf| render "backoffice/common_parts/form/link_fields",
                  link_form: lf, object: service, link_name: "useCase" } }
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:scientific_domains, :categories, :target_users, :access_types,
              :access_modes, :tag_list])),
              data: { toggle: "collapse", target: "#classification" },
              aria: { expanded: true, controls: "classification" } }
            .card-header.text-left{ id: "classification-header" }
              .row
                .col-10
                  = _("Classification")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "classification", "aria-labelledby": "classification-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:scientific_domains,
                              :categories, :target_users, :access_types, :access_modes, :tag_list])) }
          .card-body
            = f.association :scientific_domains, input_html: { data: { choice: true } },
            disabled: cant_edit([scientific_domain_ids: []]),
            collection: ScientificDomain.child_names.map { |name, sd| [name, sd.id] },
            label_method: :first, value_method: :second
            = f.association :categories, multiple: true, input_html: { data: { choice: true } },
                            collection: Category.child_names.map { |name, c| [name, c.id] },
                            disabled: cant_edit([category_ids: []])
            = f.input :horizontal, as: :boolean, label: "Horizontal service",
              boolean_style: :inline, include_hidden: true
            = f.association :research_categories, multiple: true, input_html: { data: { choice: true } }

            = f.association :target_users,
              label: _("Dedicated For"),
              input_html: { data: { choice: true }, class: "target_users" },
              disabled: cant_edit([target_user_ids: []])
            = f.association :access_types, input_html: { data: { choice: true } },
                            disabled: cant_edit([access_type_ids: []])
            = f.association :access_modes, input_html: { data: { choice: true } },
                            disabled: cant_edit([access_mode_ids: []])
            = f.input :tag_list, input_html: { value: service.tag_list.to_s }, disabled: cant_edit(:tag_list)
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:geographical_availabilities, :language_availability])),
              data: { toggle: "collapse", target: "#availability" },
              aria: { expanded: true, controls: "availability" } }
            .card-header.text-left{ id: "availability-header" }
              .row
                .col-10
                  = _("Availability")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "availability", "aria-labelledby": "availability-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:geographical_availabilities, :language_availability])) }
          .card-body
            = f.input :geographical_availabilities, as: :select,
                collection: Country.options.map { |c| [ c.iso_short_name, "value" => c.alpha2 ] },
                disabled: cant_edit([geographical_availabilities: []]),
                input_html: { data: { choice: true },  "multiple" => "true" }
            = f.input :language_availability, input_html: { multiple: true, data: { choice: true } },
                collection: I18nData.languages.map { |k, v| [v, k] },
                disabled: cant_edit([language_availability: []])

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
                  [:resource_geographic_locations])),
                  data: { toggle: "collapse", target: "#location" },
                  aria: { expanded: true, controls: "location" } }
            .card-header.text-left{ id: "location-header" }
              .row
                .col-10
                  = _("Location")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "location", "aria-labelledby": "location-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:resource_geographic_locations])) }
          .card-body
            = f.input :resource_geographic_locations, as: :select,
                  collection: Country.options.map { |c| [ c.iso_short_name, "value" => c.alpha2 ] },
                  disabled: cant_edit([resource_geographic_locations: []]),
                  input_html: { data: { choice: true },  "multiple" => "true" }

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:"main_contact.first_name", :"main_contact.last_name",
              :"main_contact.email", :"public_contacts.email", :public_contacts])),
                data: { toggle: "collapse", target: "#contact" },
                aria: { expanded: true, controls: "contact" } }
            .card-header.text-left{ id: "contact-header" }
              .row
                .col-10
                  = _("Contact")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "contact", "aria-labelledby": "contact-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:"main_contact.first_name",
            :"main_contact.last_name", :"main_contact.email", :"public_contacts.email", :public_contacts])) }
          .card-body
            .row.service-contact-emails
              .col-12
                %h3
                  = _("Main Contact")
                .contact
                  = f.fields_for :main_contact do |main_contact_form|
                    = main_contact_form.hidden_field :id, disabled: service.upstream_id.present?
                    = main_contact_form.input :first_name, disabled: service.upstream_id.present?
                    = main_contact_form.input :last_name, disabled: service.upstream_id.present?
                    = main_contact_form.input :email, disabled: service.upstream_id.present?
                    = main_contact_form.input :phone, disabled: service.upstream_id.present?
                    = main_contact_form.input :organisation, disabled: service.upstream_id.present?
                    = main_contact_form.input :position, disabled: service.upstream_id.present?
            .row.service-contact-emails{ "data-target": "service.publicContacts" }
              .col-12
                %h3
                  = _("Public contacts")
                = f.error :public_contacts, class: "invalid-feedback d-block"
                = f.fields_for :public_contacts, disabled: service.upstream_id.present?, multiple: true, as: :array,
                    wrapper_html: { "data-target" => "form.publicContact" } do |public_contact_form|
                  = render "backoffice/common_parts/form/public_contact_fields",
                  public_contact_form: public_contact_form, object: service, provider_form: false
                = link_to _("Add additional public contact"), "#", class: "btn btn-primary disablable",
                  data: { target: "form.addField",
                  action: "click->form#addField",
                  value: "publicContacts",
                  fields: f.fields_for(:public_contacts, PublicContact.new,
                  child_index: "new_field") { |pcf| render "backoffice/common_parts/form/public_contact_fields",
                  public_contact_form: pcf, object: service, provider_form: false } }
            .row.mt-5
              .col-12
                = f.input :helpdesk_email, input_html: { type: "text" }, disabled: cant_edit(:helpdesk_email)
                = f.input :security_contact_email, input_html: { type: "text" },
                    disabled: cant_edit(:security_contact_email)

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:trl, :life_cycle_status, :certifications, :standards,
              :open_source_technologies, :version, :last_update, :changelog])),
                data: { toggle: "collapse", target: "#maturity" },
                aria: { expanded: true, controls: "maturity" } }
            .card-header.text-left{ id: "maturity-header" }
              .row
                .col-10
                  = _("Maturity")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "maturity", "aria-labelledby": "maturity-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:trl, :life_cycle_status, :certifications, :standards,
                                                      :open_source_technologies, :version,
                                                      :last_update, :changelog])) }
          .card-body
            = f.association :trl, input_html: { data: { choice: true } },
                          disabled: cant_edit([trl_ids: []])
            = f.association :life_cycle_status, input_html: { data: { choice: true } },
                              disabled: cant_edit([life_cycle_status_ids: []])
            = f.input :certifications, multiple: true, input_html: { class: "form-control text optional" },
                wrapper_html: { "data-target" => "service.certifications" },
                disabled: cant_edit([certifications: []]), as: :array
            = link_to_add_array_field("service", "certifications")
            .mt-4
              = f.input :standards, multiple: true, input_html: { class: "form-control text optional" },
                  wrapper_html: { "data-target" => "service.standards" },
                  disabled: cant_edit([standards: []]), as: :array
              = link_to_add_array_field("service", "standards")
            .mt-4
              = f.input :open_source_technologies, multiple: true, input_html: { class: "form-control text optional" },
                  wrapper_html: { "data-target" => "service.openSourceTechnologies" },
                  disabled: cant_edit([open_source_technologies: []]), as: :array
              = link_to_add_array_field("service", "open_source_technologies")
            .mt-4
              = f.input :version, disabled: cant_edit(:version)
            = f.input :last_update, as: :date_time_picker, disabled: cant_edit(:last_update)

            .row.service-changelog
              .col-12
                = f.input :changelog, multiple: true, as: :array, disabled: cant_edit([changelog: []]),
                   wrapper_html: { "data-target" => "service.changelog" },
                   input_html: { class: "form-control text optional" }
            = link_to_add_array_field("service", "changelog")

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:required_services, :related_services, :related_platforms, :platforms])),
                data: { toggle: "collapse", target: "#dependencies" },
                aria: { expanded: true, controls: "dependencies" } }
            .card-header.text-left{ id: "dependencies-header" }
              .row
                .col-10
                  = _("Dependencies")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "dependencies", "aria-labelledby": "dependencies-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:required_services, :related_services,
                                                      :related_platforms, :platforms])) }
          .card-body
            = f.association :required_services, multiple: true, input_html: { data: { choice: true } },
            disabled: cant_edit([required_service_ids: []])

            = f.association :related_services, multiple: true, input_html: { data: { choice: true } },
            disabled: cant_edit([related_service_ids: []])
            - if resource_profile_4?
              = f.association :platforms, label: _("Related platforms"),
                                 multiple: true, input_html: { data: { choice: true } },
                                 disabled: cant_edit([platform_ids: []])
            - else
              = f.input :related_platforms, label: _("Related platforms"), multiple: true,
                  input_html: { class: "form-control" },
                  wrapper_html: { "data-target" => "service.relatedPlatforms" },
                  disabled: cant_edit([related_platforms: []]), as: :array
              = link_to_add_array_field("service", "related_platforms")

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:funding_bodies, :funding_programs, :grant_project_names])),
              data: { toggle: "collapse", target: "#attribution" },
              aria: { expanded: true, controls: "attribution" } }
            .card-header.text-left{ id: "attribution-header" }
              .row
                .col-10
                  = _("Attribution")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "attribution", "aria-labelledby": "attribution-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:funding_bodies, :funding_programs, :grant_project_names])) }
          .card-body
            = f.association :funding_bodies, input_html: { data: { choice: true } },
                          disabled: cant_edit([funding_body_ids: []])
            = f.association :funding_programs, input_html: { data: { choice: true } },
                              disabled: cant_edit([funding_program_ids: []])
            .row
              .col-12
                = f.input :grant_project_names, input_html: { class: "form-control text optional" },
                    wrapper_html: { "data-target" => "service.grantProjectNames" },
                    disabled: cant_edit([grant_project_names: []]), as: :array
                = link_to_add_array_field("service", "grant_project_names")

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:helpdesk_url, :manual_url, :terms_of_use_url, :privacy_policy_url,
              :access_policies_url, :training_information_url, :status_monitoring_url, :maintenance_url])),
              data: { toggle: "collapse", target: "#management" },
              aria: { expanded: true, controls: "management" } }
            .card-header.text-left{ id: "management-header" }
              .row
                .col-10
                  = _("Management")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "management", "aria-labelledby": "management-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:helpdesk_url, :manual_url, :terms_of_use_url,
                                                      :privacy_policy_url,
                                                      :access_policies_url, :training_information_url,
                                                      :status_monitoring_url, :maintenance_url])) }
          .card-body
            = f.input :helpdesk_url, disabled: cant_edit(:helpdesk_url)
            = f.input :manual_url, disabled: cant_edit(:manual_url)
            = f.input :terms_of_use_url, disabled: cant_edit(:terms_of_use_url)
            = f.input :privacy_policy_url, disabled: cant_edit(:privacy_policy_url)
            = f.input :access_policies_url, disabled: cant_edit(:access_policies_url)
            = f.input :sla_url, disabled: cant_edit(:sla_url)
            = f.input :training_information_url, disabled: cant_edit(:training_information_url)
            = f.input :status_monitoring_url, disabled: cant_edit(:status_monitoring_url)
            = f.input :maintenance_url, disabled: cant_edit(:maintenance_url)
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:order_type, :order_url])),
              data: { toggle: "collapse", target: "#order" },
              aria: { expanded: true, controls: "order" } }
            .card-header.text-left{ id: "order-header" }
              .row
                .col-10
                  = _("Order")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "order", "aria-labelledby": "order-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:order_type, :order_url])) }
          .card-body
            .row
              .col-12
                = f.input :order_type, collection: Service.order_types.keys.map(&:to_sym),
                    disabled: cant_edit(:order_type)
            .row
              .col-12
                = f.input :order_url, disabled: cant_edit(:order_url)
        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:payment_model_url, :pricing_url])),
              data: { toggle: "collapse", target: "#financial" },
              aria: { expanded: true, controls: "financial" } }
            .card-header.text-left{ id: "financial-header" }
              .row
                .col-10
                  = _("Financial")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "financial", "aria-labelledby": "financial-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:payment_model_url, :pricing_url])) }
          .card-body
            = f.input :payment_model_url, disabled: cant_edit(:payment_model_url)
            = f.input :pricing_url, disabled: cant_edit(:pricing_url)

        .card.shadow-sm.rounded
          %button.btn.btn-link{ type: "button", class: ("collapsed" if collapsed?(service,
              [:owners, :restrictions, :activate_message, :activate_message, :upstream_id])),
                data: { toggle: "collapse", target: "#other" },
                aria: { expanded: true, controls: "other" } }
            .card-header.text-left{ id: "other-header" }
              .row
                .col-10
                  = _("Other")
                .col-2.text-right
                  .collapse-icon
                    %i.fas.fa-chevron-down
                    %i.fas.fa-chevron-up
        .collapse{ id: "other", "aria-labelledby": "other-header",
            "data-parent": "#accordion-form",
            class: ("show" unless collapsed?(service, [:owners, :restrictions, :activate_message,
                                                      :activate_message, :upstream_id])) }
          .card-body
            .row
              .col-12
                = f.association :owners, multiple: true, input_html: { data: { choice: true } },
                                  disabled: cant_edit([owner_ids: []])
            .row
              .col-12
                = f.input :restrictions, disabled: cant_edit(:restrictions)
            .row.service-activate-message
              .col-12
                = f.input :activate_message, disabled: cant_edit(:activate_message)
            .row
              .col-12
                = f.input :upstream_id, collection: f.object.sources.reject { |source| source.id.nil? },
                                          include_blank: "MP", label: _("Resource Upstream")

                %h3.mt-4
                  = _("External Sources")

                = f.fields_for :sources do |sources_form|
                  = sources_form.hidden_field :id
                  = sources_form.input :source_type, collection: ServiceSource.source_types.keys.map(&:to_sym)
                  = sources_form.input :eid, label: _("EOSC Registry External ID")
                  - unless sources_form.object.id.nil?
                    = sources_form.check_box :_destroy
                    = sources_form.label :_destroy, _("Remove external source")
            .row
              .col-12.col-md-4.mt-4
                = f.input :synchronized_at, as: :date_time_picker, disabled: true


      .invalid-feedback{ styles: "display:block" }

      %hr.bottom-hr.mt-5.mb-4

      .row.mt-5
        .col-12
          = f.button :button, _("Preview"),
              name: "commit",
              value: "Preview",
              class: "btn btn-primary pl-5 pr-5 mr-5 mobile-bottom-margin",
              data: { e2e: "preview-btn" }
          = f.button :submit, class: "btn btn-primary pl-5 pr-5 mr-5 mobile-bottom-margin", "data-e2e": "submit-btn"
          = back_link_to _("Cancel and back to previous page"), service, prefix: :backoffice,
              class: "text-left flex-grow-1 text-uppercase"
