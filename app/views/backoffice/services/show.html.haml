- content_for :title, @service.name
- breadcrumb :backoffice_service, @service
.container
  - if @service.offers.blank?
    .alert.alert-danger.mb-0.text-center
      = _("This resource has no offers. Add one offer to make possible for a user to Access the service.")
  - elsif @service.published? && @service.offers.published.blank?
    .alert.alert-warning.mb-0.text-center
      -# haml-lint:disable MultilinePipe
      = ("The resource is published but has no published offers. Publish one offer to make possible for a user to " + |
         "Access the service.") |
      -# haml-lint:enable MultilinePipe
  = render "services/errors", service: @service

.container
  .status-row
    .row
      .col-12.col-lg-4
        %span
          = _("Status") + ":"
        %span.font-weight-bold= @service.status
      .col-12.col-lg-8.service-buttons
        .btn-group.float-right
          - if policy([:backoffice, @service]).publish?
            = link_to _("Publish"),
                      backoffice_service_publish_path(@service),
                      method: :post,
                      data: { confirm: _("Are you sure you want to publish this resource?"), e2e: "publish-btn" },
                      class: "btn btn-success btn-sm"
          - if policy([:backoffice, @service]).publish_unverified?
            = link_to _("Publish as unverified resource"),
                      backoffice_service_publish_path(@service, unverified: true),
                      method: :post,
                      data: { confirm: _("Are you sure you want to publish this resource as unverified resource?") },
                      class: "btn btn-warning btn-sm"
          - if policy([:backoffice, @service]).draft?
            = link_to _("Stop showing in the MP"),
                      backoffice_service_draft_path(@service),
                      method: :post,
                      data: { confirm: _("Are you sure you want to stop showing this resource?"), e2e: "draft-btn" },
                      class: "btn btn-error btn-sm"


.container
  .pt-4.pl-3.pr-3.shadow-sm.rounded.service-box.service-detail.backoffice{ "data-shepherd-tour-target": "service-box" }
    = render "backoffice/services/header", service: @service
    = render "services/tabs", service: @service, params: { from: "backoffice_service" }
.tab-content
  = render "backoffice/services/about", service: @service, offers: @offers, analytics: @analytics
  = render "taggable/details_section", taggable: @service
